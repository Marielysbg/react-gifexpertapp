{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","fetch","res","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAElBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACAO,KAAO,OACPC,MAAST,EACTU,SApBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCVlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCF,EAFnC,+DAGDG,MAAOD,GAHN,cAGbE,EAHa,gBAIEA,EAAIC,OAJN,uBAIZC,EAJY,EAIZA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,UAAUX,QAXf,kBAeZK,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAGjC,OACI,sBAAKa,UAAY,yCAAjB,UACI,qBAAKC,IAAOd,EAAKe,IAAON,IACxB,kCAAKA,EAAL,WCHCO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAGrB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATDC,qBAAU,WAELvB,EAAQC,GACPuB,MAAK,SAAAd,GAAG,OAAIY,EAAS,CAClBf,KAAMG,EACNU,SAAS,SAGf,CAACnB,IACIoB,EDbyBI,CAAaxB,GAAhCY,EAAb,EAAON,KAAca,EAArB,EAAqBA,QAQrB,OACI,qCACA,qBAAIJ,UAAY,wBAAhB,cAA2Cf,EAA3C,OAECmB,GAAW,wCAEX,qBAAKJ,UAAY,YAAjB,SAEUH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEtBrBe,EAAe,WAGxB,MAAoCvC,mBAAS,CAAC,gBAA9C,mBAAOwC,EAAP,KAAmBzC,EAAnB,KAUA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAEQyC,EAAWlB,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MCnB/B2B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.65f2b27f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setcategories(cats => [inputValue, ...cats ] );\r\n            setinputValue(\"\");\r\n        }\r\n    \r\n    }\r\n\r\n  \r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n            type = \"text\"\r\n            value = {inputValue}\r\n            onChange = {handleInputChange}\r\n           />\r\n        </form>\r\n    )\r\n\r\n    \r\n}\r\n\r\n AddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n\r\n/* export default AddCategory; */ \r\n\r\n","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=NXBfIHaymyHQMWQbt6spUIZVUz7NG4mZ`;\r\n    const res = await fetch (url);\r\n    const {data} = await res.json();\r\n\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className = 'card animate__animated animate__bounce'>\r\n            <img src = {url} alt = {title}></img>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    /* const [images, setimages] = useState([]);\r\n    useEffect( () => {\r\n        getGifs(category)\r\n        .then(setimages);\r\n    }, [category]) */\r\n\r\n    return (\r\n        <>\r\n        <h3 className = 'animate__bounceInDown'> { category } </h3>\r\n      \r\n        {loading && <p>Loading</p>}\r\n\r\n       { <div className = 'card-grid'>\r\n               {\r\n                   images.map(img => (\r\n                       <GifGridItem\r\n                       key = {img.id}\r\n                       {...img}\r\n                       />\r\n                   ))\r\n               }\r\n        </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n  \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n   useEffect(() => {\r\n\r\n        getGifs(category)\r\n        .then(img => setstate({\r\n            data: img,\r\n            loading: false\r\n        }))\r\n\r\n   }, [category])\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['Dragon Ball', 'Samurai X', 'One Punch']\r\n    const [categories, setcategories] = useState(['Dragon Ball']);\r\n    \r\n    /* const handleAdd = (() => {\r\n\r\n     //setcategories(['Naruto', ...categories]);\r\n     //setcategories([...categories, 'Naruto']);\r\n        setcategories(cats => [...cats, 'Naruto']);\r\n\r\n    });\r\n */\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setcategories = {setcategories}/>\r\n            <hr/>\r\n            <ol>\r\n            {\r\n                    categories.map(category => \r\n                        <GifGrid \r\n                        key = {category}\r\n                        category = {category}/>\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}